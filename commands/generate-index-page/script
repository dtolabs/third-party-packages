#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: third-party-packages:generate-index-page: "Generate the index page for the GitHub pages site"
#/ usage: rerun third-party-packages:generate-index-page [options]

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh generate-index-page || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: third-party-packages:generate-index-page. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: 

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

# - - -
# Put the command implementation here.
# - - -

compose-index-page() {
  cat $RERUN_MODULE_DIR/templates/header.md

  for PACKAGE_REPOSITORY in $(list-third-party-package-repositories)
  do
    PACKAGE_REPOSITORY_OWNER=$(get-third-party-package-repository-owner ${PACKAGE_REPOSITORY})
    PACKAGE_REPOSITORY_NAME=$(get-third-party-package-repository-name ${PACKAGE_REPOSITORY})

    echo "* [${PACKAGE_REPOSITORY_OWNER}](https://github.com/${PACKAGE_REPOSITORY_OWNER})/[${PACKAGE_REPOSITORY_NAME}](https://github.com/${PACKAGE_REPOSITORY_OWNER}/${PACKAGE_REPOSITORY_NAME})"
  done

  cat $RERUN_MODULE_DIR/templates/footer.md
}

TMPDIR=$(mktemp -d)

git clone -q --branch gh-pages git@github.com:dtolabs/third-party-packages.git ${TMPDIR}

pushd  ${TMPDIR} >/dev/null

compose-index-page | mkd2html -css docs.css > index.html

if ! git diff --exit-code --quiet index.html
then
  git add index.html
  git commit -q --message="Automatic update of index page from $USER@$HOSTNAME"
  git push -q
fi

popd >/dev/null

rm -rf ${TMPDIR}

# Done. Exit with last command exit status.
exit $?

