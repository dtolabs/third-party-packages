#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: third-party-packages:create-build-jobs: "Create the build jobs associated with all third-party packages."
#/ usage: rerun third-party-packages:create-build-jobs [ --jenkins-url <http://${HOSTNAME}:8080>] 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh create-build-jobs || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: third-party-packages:create-build-jobs. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: JENKINS_URL

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

# - - -
# Put the command implementation here.
# - - -

# Run through the list of third-party packages and clone them into RERUN_MODULES in order to be able to run their create build jobs commands.
for PACKAGE_REPOSITORY in $(list-third-party-package-repositories)
do
  PACKAGE_REPOSITORY_OWNER=$(get-third-party-package-repository-owner ${PACKAGE_REPOSITORY})
  PACKAGE_REPOSITORY_NAME=$(get-third-party-package-repository-name ${PACKAGE_REPOSITORY})

  if [[ -d ${RERUN_MODULES}/$PACKAGE_REPOSITORY_NAME ]]
  then
    (cd ${RERUN_MODULES}/$PACKAGE_REPOSITORY_NAME; git pull -q)
  else
    (cd ${RERUN_MODULES}; git clone -q git://github.com/${PACKAGE_REPOSITORY_OWNER}/${PACKAGE_REPOSITORY_NAME}.git)
  fi

  rerun ${PACKAGE_REPOSITORY_NAME}:create-build-jobs --jenkins-url ${JENKINS_URL} 
done

# Done. Exit with last command exit status.
exit $?

